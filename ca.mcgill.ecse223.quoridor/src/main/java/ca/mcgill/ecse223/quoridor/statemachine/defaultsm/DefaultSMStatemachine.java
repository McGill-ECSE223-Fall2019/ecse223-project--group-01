/** Generated by YAKINDU Statechart Tools code generator. */
package ca.mcgill.ecse223.quoridor.statemachine.defaultsm;


public class DefaultSMStatemachine implements IDefaultSMStatemachine {
	protected class SCIPawnImpl implements SCIPawn {
	
		private SCIPawnOperationCallback operationCallback;
		
		public void setSCIPawnOperationCallback(
				SCIPawnOperationCallback operationCallback) {
			this.operationCallback = operationCallback;
		}
		private boolean setup;
		
		
		public void raiseSetup() {
			setup = true;
			runCycle();
		}
		
		private boolean up;
		
		
		public void raiseUp() {
			up = true;
			runCycle();
		}
		
		private boolean upLeft;
		
		
		public void raiseUpLeft() {
			upLeft = true;
			runCycle();
		}
		
		private boolean upRight;
		
		
		public void raiseUpRight() {
			upRight = true;
			runCycle();
		}
		
		private boolean down;
		
		
		public void raiseDown() {
			down = true;
			runCycle();
		}
		
		private boolean downLeft;
		
		
		public void raiseDownLeft() {
			downLeft = true;
			runCycle();
		}
		
		private boolean downRight;
		
		
		public void raiseDownRight() {
			downRight = true;
			runCycle();
		}
		
		private boolean left;
		
		
		public void raiseLeft() {
			left = true;
			runCycle();
		}
		
		private boolean right;
		
		
		public void raiseRight() {
			right = true;
			runCycle();
		}
		
		private boolean moveCompleted;
		
		
		public boolean isRaisedMoveCompleted() {
			return moveCompleted;
		}
		
		protected void raiseMoveCompleted() {
			moveCompleted = true;
		}
		
		protected void clearEvents() {
			setup = false;
			up = false;
			upLeft = false;
			upRight = false;
			down = false;
			downLeft = false;
			downRight = false;
			left = false;
			right = false;
		}
		protected void clearOutEvents() {
		
		moveCompleted = false;
		}
		
	}
	
	
	protected SCIPawnImpl sCIPawn;
	
	private boolean initialized = false;
	
	public enum State {
		main_region_PawnState,
		main_region_PawnState_Vertical_Top,
		main_region_PawnState_Vertical_Almost_Top,
		main_region_PawnState_Vertical_Almost_Bottom,
		main_region_PawnState_Vertical_Bottom,
		main_region_PawnState_Vertical_Mid,
		main_region_PawnState_Horizontal_Left,
		main_region_PawnState_Horizontal_Almost_Left,
		main_region_PawnState_Horizontal_Almost_Right,
		main_region_PawnState_Horizontal_Right,
		main_region_PawnState_Horizontal_Mid,
		$NullState$
	};
	
	private final State[] stateVector = new State[2];
	
	private int nextStateIndex;
	
	private InternalOperationCallback operationCallback;
	public DefaultSMStatemachine() {
		sCIPawn = new SCIPawnImpl();
	}
	
	public void init() {
		this.initialized = true;
		if (this.operationCallback == null) {
			throw new IllegalStateException("Operation callback for internal must be set.");	
		}
		if (this.sCIPawn.operationCallback == null) {
			throw new IllegalStateException("Operation callback for interface sCIPawn must be set.");
		}
		
		for (int i = 0; i < 2; i++) {
			stateVector[i] = State.$NullState$;
		}
		clearEvents();
		clearOutEvents();
	}
	
	public void enter() {
		if (!initialized) {
			throw new IllegalStateException(
				"The state machine needs to be initialized first by calling the init() function."
			);
		}
		enterSequence_main_region_default();
	}
	
	public void runCycle() {
		if (!initialized)
			throw new IllegalStateException(
					"The state machine needs to be initialized first by calling the init() function.");
		clearOutEvents();
		for (nextStateIndex = 0; nextStateIndex < stateVector.length; nextStateIndex++) {
			switch (stateVector[nextStateIndex]) {
			case main_region_PawnState_Vertical_Top:
				main_region_PawnState_Vertical_Top_react(true);
				break;
			case main_region_PawnState_Vertical_Almost_Top:
				main_region_PawnState_Vertical_Almost_Top_react(true);
				break;
			case main_region_PawnState_Vertical_Almost_Bottom:
				main_region_PawnState_Vertical_Almost_Bottom_react(true);
				break;
			case main_region_PawnState_Vertical_Bottom:
				main_region_PawnState_Vertical_Bottom_react(true);
				break;
			case main_region_PawnState_Vertical_Mid:
				main_region_PawnState_Vertical_Mid_react(true);
				break;
			case main_region_PawnState_Horizontal_Left:
				main_region_PawnState_Horizontal_Left_react(true);
				break;
			case main_region_PawnState_Horizontal_Almost_Left:
				main_region_PawnState_Horizontal_Almost_Left_react(true);
				break;
			case main_region_PawnState_Horizontal_Almost_Right:
				main_region_PawnState_Horizontal_Almost_Right_react(true);
				break;
			case main_region_PawnState_Horizontal_Right:
				main_region_PawnState_Horizontal_Right_react(true);
				break;
			case main_region_PawnState_Horizontal_Mid:
				main_region_PawnState_Horizontal_Mid_react(true);
				break;
			default:
				// $NullState$
			}
		}
		clearEvents();
	}
	public void exit() {
		exitSequence_main_region();
	}
	
	/**
	 * @see IStatemachine#isActive()
	 */
	public boolean isActive() {
		return stateVector[0] != State.$NullState$||stateVector[1] != State.$NullState$;
	}
	
	/** 
	* Always returns 'false' since this state machine can never become final.
	*
	* @see IStatemachine#isFinal()
	*/
	public boolean isFinal() {
		return false;
	}
	/**
	* This method resets the incoming events (time events included).
	*/
	protected void clearEvents() {
		sCIPawn.clearEvents();
	}
	
	/**
	* This method resets the outgoing events.
	*/
	protected void clearOutEvents() {
		sCIPawn.clearOutEvents();
	}
	
	/**
	* Returns true if the given state is currently active otherwise false.
	*/
	public boolean isStateActive(State state) {
	
		switch (state) {
		case main_region_PawnState:
			return stateVector[0].ordinal() >= State.
					main_region_PawnState.ordinal()&& stateVector[0].ordinal() <= State.main_region_PawnState_Horizontal_Mid.ordinal();
		case main_region_PawnState_Vertical_Top:
			return stateVector[0] == State.main_region_PawnState_Vertical_Top;
		case main_region_PawnState_Vertical_Almost_Top:
			return stateVector[0] == State.main_region_PawnState_Vertical_Almost_Top;
		case main_region_PawnState_Vertical_Almost_Bottom:
			return stateVector[0] == State.main_region_PawnState_Vertical_Almost_Bottom;
		case main_region_PawnState_Vertical_Bottom:
			return stateVector[0] == State.main_region_PawnState_Vertical_Bottom;
		case main_region_PawnState_Vertical_Mid:
			return stateVector[0] == State.main_region_PawnState_Vertical_Mid;
		case main_region_PawnState_Horizontal_Left:
			return stateVector[1] == State.main_region_PawnState_Horizontal_Left;
		case main_region_PawnState_Horizontal_Almost_Left:
			return stateVector[1] == State.main_region_PawnState_Horizontal_Almost_Left;
		case main_region_PawnState_Horizontal_Almost_Right:
			return stateVector[1] == State.main_region_PawnState_Horizontal_Almost_Right;
		case main_region_PawnState_Horizontal_Right:
			return stateVector[1] == State.main_region_PawnState_Horizontal_Right;
		case main_region_PawnState_Horizontal_Mid:
			return stateVector[1] == State.main_region_PawnState_Horizontal_Mid;
		default:
			return false;
		}
	}
	
	public SCIPawn getSCIPawn() {
		return sCIPawn;
	}
	
	public void setInternalOperationCallback(
			InternalOperationCallback operationCallback) {
		this.operationCallback = operationCallback;
	}
	
	private boolean check_main_region_PawnState_Vertical__choice_0_tr0_tr0() {
		return (operationCallback.pawnGetRow()>3 && operationCallback.pawnGetRow()<7);
	}
	
	private boolean check_main_region_PawnState_Vertical__choice_0_tr1_tr1() {
		return operationCallback.pawnGetRow()==1;
	}
	
	private boolean check_main_region_PawnState_Vertical__choice_0_tr2_tr2() {
		return operationCallback.pawnGetRow()==2;
	}
	
	private boolean check_main_region_PawnState_Vertical__choice_0_tr3_tr3() {
		return operationCallback.pawnGetRow()==8;
	}
	
	private boolean check_main_region_PawnState_Vertical__choice_0_tr4_tr4() {
		return operationCallback.pawnGetRow()==9;
	}
	
	private boolean check_main_region_PawnState_Horizontal__choice_0_tr0_tr0() {
		return operationCallback.pawnGetCol()==1;
	}
	
	private boolean check_main_region_PawnState_Horizontal__choice_0_tr1_tr1() {
		return (operationCallback.pawnGetCol()>3 && operationCallback.pawnGetCol()<7);
	}
	
	private boolean check_main_region_PawnState_Horizontal__choice_0_tr2_tr2() {
		return operationCallback.pawnGetCol()==2;
	}
	
	private boolean check_main_region_PawnState_Horizontal__choice_0_tr3_tr3() {
		return operationCallback.pawnGetCol()==8;
	}
	
	private boolean check_main_region_PawnState_Horizontal__choice_0_tr4_tr4() {
		return operationCallback.pawnGetCol()==9;
	}
	
	private void effect_main_region_PawnState_Vertical__choice_0_tr0() {
		enterSequence_main_region_PawnState_Vertical_Mid_default();
	}
	
	private void effect_main_region_PawnState_Vertical__choice_0_tr1() {
		enterSequence_main_region_PawnState_Vertical_Top_default();
	}
	
	private void effect_main_region_PawnState_Vertical__choice_0_tr2() {
		enterSequence_main_region_PawnState_Vertical_Almost_Top_default();
	}
	
	private void effect_main_region_PawnState_Vertical__choice_0_tr3() {
		enterSequence_main_region_PawnState_Vertical_Almost_Bottom_default();
	}
	
	private void effect_main_region_PawnState_Vertical__choice_0_tr4() {
		enterSequence_main_region_PawnState_Vertical_Bottom_default();
	}
	
	private void effect_main_region_PawnState_Vertical__choice_0_tr5() {
		enterSequence_main_region_PawnState_Vertical_Mid_default();
	}
	
	private void effect_main_region_PawnState_Horizontal__choice_0_tr0() {
		enterSequence_main_region_PawnState_Horizontal_Left_default();
	}
	
	private void effect_main_region_PawnState_Horizontal__choice_0_tr1() {
		enterSequence_main_region_PawnState_Horizontal_Mid_default();
	}
	
	private void effect_main_region_PawnState_Horizontal__choice_0_tr2() {
		enterSequence_main_region_PawnState_Horizontal_Almost_Left_default();
	}
	
	private void effect_main_region_PawnState_Horizontal__choice_0_tr3() {
		enterSequence_main_region_PawnState_Horizontal_Almost_Right_default();
	}
	
	private void effect_main_region_PawnState_Horizontal__choice_0_tr4() {
		enterSequence_main_region_PawnState_Horizontal_Right_default();
	}
	
	private void effect_main_region_PawnState_Horizontal__choice_0_tr5() {
		enterSequence_main_region_PawnState_Horizontal_Mid_default();
	}
	
	/* Entry action for state 'Top'. */
	private void entryAction_main_region_PawnState_Vertical_Top() {
		sCIPawn.raiseMoveCompleted();
	}
	
	/* Entry action for state 'Almost Top'. */
	private void entryAction_main_region_PawnState_Vertical_Almost_Top() {
		sCIPawn.raiseMoveCompleted();
	}
	
	/* Entry action for state 'Almost Bottom'. */
	private void entryAction_main_region_PawnState_Vertical_Almost_Bottom() {
		sCIPawn.raiseMoveCompleted();
	}
	
	/* Entry action for state 'Bottom'. */
	private void entryAction_main_region_PawnState_Vertical_Bottom() {
		sCIPawn.raiseMoveCompleted();
	}
	
	/* Entry action for state 'Mid'. */
	private void entryAction_main_region_PawnState_Vertical_Mid() {
		sCIPawn.raiseMoveCompleted();
	}
	
	/* Entry action for state 'Left'. */
	private void entryAction_main_region_PawnState_Horizontal_Left() {
		sCIPawn.raiseMoveCompleted();
	}
	
	/* Entry action for state 'Almost Left'. */
	private void entryAction_main_region_PawnState_Horizontal_Almost_Left() {
		sCIPawn.raiseMoveCompleted();
	}
	
	/* Entry action for state 'Almost Right'. */
	private void entryAction_main_region_PawnState_Horizontal_Almost_Right() {
		sCIPawn.raiseMoveCompleted();
	}
	
	/* Entry action for state 'Right'. */
	private void entryAction_main_region_PawnState_Horizontal_Right() {
		sCIPawn.raiseMoveCompleted();
	}
	
	/* Entry action for state 'Mid'. */
	private void entryAction_main_region_PawnState_Horizontal_Mid() {
		sCIPawn.raiseMoveCompleted();
	}
	
	/* 'default' enter sequence for state Top */
	private void enterSequence_main_region_PawnState_Vertical_Top_default() {
		entryAction_main_region_PawnState_Vertical_Top();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_PawnState_Vertical_Top;
	}
	
	/* 'default' enter sequence for state Almost Top */
	private void enterSequence_main_region_PawnState_Vertical_Almost_Top_default() {
		entryAction_main_region_PawnState_Vertical_Almost_Top();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_PawnState_Vertical_Almost_Top;
	}
	
	/* 'default' enter sequence for state Almost Bottom */
	private void enterSequence_main_region_PawnState_Vertical_Almost_Bottom_default() {
		entryAction_main_region_PawnState_Vertical_Almost_Bottom();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_PawnState_Vertical_Almost_Bottom;
	}
	
	/* 'default' enter sequence for state Bottom */
	private void enterSequence_main_region_PawnState_Vertical_Bottom_default() {
		entryAction_main_region_PawnState_Vertical_Bottom();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_PawnState_Vertical_Bottom;
	}
	
	/* 'default' enter sequence for state Mid */
	private void enterSequence_main_region_PawnState_Vertical_Mid_default() {
		entryAction_main_region_PawnState_Vertical_Mid();
		nextStateIndex = 0;
		stateVector[0] = State.main_region_PawnState_Vertical_Mid;
	}
	
	/* 'default' enter sequence for state Left */
	private void enterSequence_main_region_PawnState_Horizontal_Left_default() {
		entryAction_main_region_PawnState_Horizontal_Left();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_PawnState_Horizontal_Left;
	}
	
	/* 'default' enter sequence for state Almost Left */
	private void enterSequence_main_region_PawnState_Horizontal_Almost_Left_default() {
		entryAction_main_region_PawnState_Horizontal_Almost_Left();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_PawnState_Horizontal_Almost_Left;
	}
	
	/* 'default' enter sequence for state Almost Right */
	private void enterSequence_main_region_PawnState_Horizontal_Almost_Right_default() {
		entryAction_main_region_PawnState_Horizontal_Almost_Right();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_PawnState_Horizontal_Almost_Right;
	}
	
	/* 'default' enter sequence for state Right */
	private void enterSequence_main_region_PawnState_Horizontal_Right_default() {
		entryAction_main_region_PawnState_Horizontal_Right();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_PawnState_Horizontal_Right;
	}
	
	/* 'default' enter sequence for state Mid */
	private void enterSequence_main_region_PawnState_Horizontal_Mid_default() {
		entryAction_main_region_PawnState_Horizontal_Mid();
		nextStateIndex = 1;
		stateVector[1] = State.main_region_PawnState_Horizontal_Mid;
	}
	
	/* 'default' enter sequence for region main region */
	private void enterSequence_main_region_default() {
		react_main_region__entry_Default();
	}
	
	/* Default exit sequence for state Top */
	private void exitSequence_main_region_PawnState_Vertical_Top() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state Almost Top */
	private void exitSequence_main_region_PawnState_Vertical_Almost_Top() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state Almost Bottom */
	private void exitSequence_main_region_PawnState_Vertical_Almost_Bottom() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state Bottom */
	private void exitSequence_main_region_PawnState_Vertical_Bottom() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state Mid */
	private void exitSequence_main_region_PawnState_Vertical_Mid() {
		nextStateIndex = 0;
		stateVector[0] = State.$NullState$;
	}
	
	/* Default exit sequence for state Left */
	private void exitSequence_main_region_PawnState_Horizontal_Left() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state Almost Left */
	private void exitSequence_main_region_PawnState_Horizontal_Almost_Left() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state Almost Right */
	private void exitSequence_main_region_PawnState_Horizontal_Almost_Right() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state Right */
	private void exitSequence_main_region_PawnState_Horizontal_Right() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for state Mid */
	private void exitSequence_main_region_PawnState_Horizontal_Mid() {
		nextStateIndex = 1;
		stateVector[1] = State.$NullState$;
	}
	
	/* Default exit sequence for region main region */
	private void exitSequence_main_region() {
		switch (stateVector[0]) {
		case main_region_PawnState_Vertical_Top:
			exitSequence_main_region_PawnState_Vertical_Top();
			break;
		case main_region_PawnState_Vertical_Almost_Top:
			exitSequence_main_region_PawnState_Vertical_Almost_Top();
			break;
		case main_region_PawnState_Vertical_Almost_Bottom:
			exitSequence_main_region_PawnState_Vertical_Almost_Bottom();
			break;
		case main_region_PawnState_Vertical_Bottom:
			exitSequence_main_region_PawnState_Vertical_Bottom();
			break;
		case main_region_PawnState_Vertical_Mid:
			exitSequence_main_region_PawnState_Vertical_Mid();
			break;
		default:
			break;
		}
		
		switch (stateVector[1]) {
		case main_region_PawnState_Horizontal_Left:
			exitSequence_main_region_PawnState_Horizontal_Left();
			break;
		case main_region_PawnState_Horizontal_Almost_Left:
			exitSequence_main_region_PawnState_Horizontal_Almost_Left();
			break;
		case main_region_PawnState_Horizontal_Almost_Right:
			exitSequence_main_region_PawnState_Horizontal_Almost_Right();
			break;
		case main_region_PawnState_Horizontal_Right:
			exitSequence_main_region_PawnState_Horizontal_Right();
			break;
		case main_region_PawnState_Horizontal_Mid:
			exitSequence_main_region_PawnState_Horizontal_Mid();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region Vertical */
	private void exitSequence_main_region_PawnState_Vertical() {
		switch (stateVector[0]) {
		case main_region_PawnState_Vertical_Top:
			exitSequence_main_region_PawnState_Vertical_Top();
			break;
		case main_region_PawnState_Vertical_Almost_Top:
			exitSequence_main_region_PawnState_Vertical_Almost_Top();
			break;
		case main_region_PawnState_Vertical_Almost_Bottom:
			exitSequence_main_region_PawnState_Vertical_Almost_Bottom();
			break;
		case main_region_PawnState_Vertical_Bottom:
			exitSequence_main_region_PawnState_Vertical_Bottom();
			break;
		case main_region_PawnState_Vertical_Mid:
			exitSequence_main_region_PawnState_Vertical_Mid();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region Horizontal */
	private void exitSequence_main_region_PawnState_Horizontal() {
		switch (stateVector[1]) {
		case main_region_PawnState_Horizontal_Left:
			exitSequence_main_region_PawnState_Horizontal_Left();
			break;
		case main_region_PawnState_Horizontal_Almost_Left:
			exitSequence_main_region_PawnState_Horizontal_Almost_Left();
			break;
		case main_region_PawnState_Horizontal_Almost_Right:
			exitSequence_main_region_PawnState_Horizontal_Almost_Right();
			break;
		case main_region_PawnState_Horizontal_Right:
			exitSequence_main_region_PawnState_Horizontal_Right();
			break;
		case main_region_PawnState_Horizontal_Mid:
			exitSequence_main_region_PawnState_Horizontal_Mid();
			break;
		default:
			break;
		}
	}
	
	/* The reactions of state null. */
	private void react_main_region_PawnState_Vertical__choice_0() {
		if (check_main_region_PawnState_Vertical__choice_0_tr0_tr0()) {
			effect_main_region_PawnState_Vertical__choice_0_tr0();
		} else {
			if (check_main_region_PawnState_Vertical__choice_0_tr1_tr1()) {
				effect_main_region_PawnState_Vertical__choice_0_tr1();
			} else {
				if (check_main_region_PawnState_Vertical__choice_0_tr2_tr2()) {
					effect_main_region_PawnState_Vertical__choice_0_tr2();
				} else {
					if (check_main_region_PawnState_Vertical__choice_0_tr3_tr3()) {
						effect_main_region_PawnState_Vertical__choice_0_tr3();
					} else {
						if (check_main_region_PawnState_Vertical__choice_0_tr4_tr4()) {
							effect_main_region_PawnState_Vertical__choice_0_tr4();
						} else {
							effect_main_region_PawnState_Vertical__choice_0_tr5();
						}
					}
				}
			}
		}
	}
	
	/* The reactions of state null. */
	private void react_main_region_PawnState_Horizontal__choice_0() {
		if (check_main_region_PawnState_Horizontal__choice_0_tr0_tr0()) {
			effect_main_region_PawnState_Horizontal__choice_0_tr0();
		} else {
			if (check_main_region_PawnState_Horizontal__choice_0_tr1_tr1()) {
				effect_main_region_PawnState_Horizontal__choice_0_tr1();
			} else {
				if (check_main_region_PawnState_Horizontal__choice_0_tr2_tr2()) {
					effect_main_region_PawnState_Horizontal__choice_0_tr2();
				} else {
					if (check_main_region_PawnState_Horizontal__choice_0_tr3_tr3()) {
						effect_main_region_PawnState_Horizontal__choice_0_tr3();
					} else {
						if (check_main_region_PawnState_Horizontal__choice_0_tr4_tr4()) {
							effect_main_region_PawnState_Horizontal__choice_0_tr4();
						} else {
							effect_main_region_PawnState_Horizontal__choice_0_tr5();
						}
					}
				}
			}
		}
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region__entry_Default() {
		react_main_region__sync0();
	}
	
	/* The reactions of state null. */
	private void react_main_region__sync0() {
		react_main_region_PawnState_Vertical__choice_0();
		react_main_region_PawnState_Horizontal__choice_0();
	}
	
	private boolean react() {
		return false;
	}
	
	private boolean main_region_PawnState_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			did_transition = false;
		}
		if (did_transition==false) {
			did_transition = react();
		}
		return did_transition;
	}
	
	private boolean main_region_PawnState_Vertical_Top_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (((sCIPawn.down) && (operationCallback.isValidMove("down")))) {
				exitSequence_main_region_PawnState_Vertical_Top();
				sCIPawn.operationCallback.movePawn("down", 1);
				
				react_main_region_PawnState_Vertical__choice_0();
			} else {
				if (((sCIPawn.downRight) && ((operationCallback.isValidJump("downright") && !isStateActive(State.main_region_PawnState_Horizontal_Right))))) {
					exitSequence_main_region_PawnState_Vertical_Top();
					sCIPawn.operationCallback.movePawn("down", 1);
					
					react_main_region_PawnState_Vertical__choice_0();
				} else {
					if (((sCIPawn.downLeft) && ((operationCallback.isValidJump("downleft") && !isStateActive(State.main_region_PawnState_Horizontal_Left))))) {
						exitSequence_main_region_PawnState_Vertical_Top();
						sCIPawn.operationCallback.movePawn("down", 1);
						
						react_main_region_PawnState_Vertical__choice_0();
					} else {
						if (((sCIPawn.down) && (operationCallback.isValidJump("down")))) {
							exitSequence_main_region_PawnState_Vertical_Top();
							sCIPawn.operationCallback.movePawn("down", 2);
							
							react_main_region_PawnState_Vertical__choice_0();
						} else {
							did_transition = false;
						}
					}
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_PawnState_Vertical_Almost_Top_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (((sCIPawn.up) && (operationCallback.isValidMove("up")))) {
				exitSequence_main_region_PawnState_Vertical_Almost_Top();
				sCIPawn.operationCallback.movePawn("up", 1);
				
				react_main_region_PawnState_Vertical__choice_0();
			} else {
				if (((sCIPawn.upLeft) && ((operationCallback.isValidJump("upleft") && !isStateActive(State.main_region_PawnState_Horizontal_Left))))) {
					exitSequence_main_region_PawnState_Vertical_Almost_Top();
					sCIPawn.operationCallback.movePawn("up", 1);
					
					react_main_region_PawnState_Vertical__choice_0();
				} else {
					if (((sCIPawn.upRight) && ((operationCallback.isValidJump("upright") && !isStateActive(State.main_region_PawnState_Horizontal_Right))))) {
						exitSequence_main_region_PawnState_Vertical_Almost_Top();
						sCIPawn.operationCallback.movePawn("up", 1);
						
						react_main_region_PawnState_Vertical__choice_0();
					} else {
						if (((sCIPawn.down) && (operationCallback.isValidMove("down")))) {
							exitSequence_main_region_PawnState_Vertical_Almost_Top();
							sCIPawn.operationCallback.movePawn("down", 1);
							
							react_main_region_PawnState_Vertical__choice_0();
						} else {
							if (((sCIPawn.downLeft) && ((operationCallback.isValidJump("downleft") && !isStateActive(State.main_region_PawnState_Horizontal_Left))))) {
								exitSequence_main_region_PawnState_Vertical_Almost_Top();
								sCIPawn.operationCallback.movePawn("down", 1);
								
								react_main_region_PawnState_Vertical__choice_0();
							} else {
								if (((sCIPawn.downRight) && ((operationCallback.isValidJump("downright") && !isStateActive(State.main_region_PawnState_Horizontal_Right))))) {
									exitSequence_main_region_PawnState_Vertical_Almost_Top();
									sCIPawn.operationCallback.movePawn("down", 1);
									
									react_main_region_PawnState_Vertical__choice_0();
								} else {
									if (((sCIPawn.down) && (operationCallback.isValidJump("down")))) {
										exitSequence_main_region_PawnState_Vertical_Almost_Top();
										sCIPawn.operationCallback.movePawn("down", 2);
										
										react_main_region_PawnState_Vertical__choice_0();
									} else {
										did_transition = false;
									}
								}
							}
						}
					}
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_PawnState_Vertical_Almost_Bottom_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (((sCIPawn.up) && (operationCallback.isValidMove("up")))) {
				exitSequence_main_region_PawnState_Vertical_Almost_Bottom();
				sCIPawn.operationCallback.movePawn("up", 1);
				
				react_main_region_PawnState_Vertical__choice_0();
			} else {
				if (((sCIPawn.upLeft) && ((operationCallback.isValidJump("upleft") && !isStateActive(State.main_region_PawnState_Horizontal_Left))))) {
					exitSequence_main_region_PawnState_Vertical_Almost_Bottom();
					sCIPawn.operationCallback.movePawn("up", 1);
					
					react_main_region_PawnState_Vertical__choice_0();
				} else {
					if (((sCIPawn.upRight) && ((operationCallback.isValidJump("upright") && !isStateActive(State.main_region_PawnState_Horizontal_Right))))) {
						exitSequence_main_region_PawnState_Vertical_Almost_Bottom();
						sCIPawn.operationCallback.movePawn("up", 1);
						
						react_main_region_PawnState_Vertical__choice_0();
					} else {
						if (((sCIPawn.up) && (operationCallback.isValidJump("up")))) {
							exitSequence_main_region_PawnState_Vertical_Almost_Bottom();
							sCIPawn.operationCallback.movePawn("up", 2);
							
							react_main_region_PawnState_Vertical__choice_0();
						} else {
							if (((sCIPawn.down) && (operationCallback.isValidMove("down")))) {
								exitSequence_main_region_PawnState_Vertical_Almost_Bottom();
								sCIPawn.operationCallback.movePawn("down", 1);
								
								react_main_region_PawnState_Vertical__choice_0();
							} else {
								if (((sCIPawn.downLeft) && ((operationCallback.isValidJump("downleft") && !isStateActive(State.main_region_PawnState_Horizontal_Left))))) {
									exitSequence_main_region_PawnState_Vertical_Almost_Bottom();
									sCIPawn.operationCallback.movePawn("down", 1);
									
									react_main_region_PawnState_Vertical__choice_0();
								} else {
									if (((sCIPawn.downRight) && ((operationCallback.isValidJump("downright") && !isStateActive(State.main_region_PawnState_Horizontal_Right))))) {
										exitSequence_main_region_PawnState_Vertical_Almost_Bottom();
										sCIPawn.operationCallback.movePawn("down", 1);
										
										react_main_region_PawnState_Vertical__choice_0();
									} else {
										did_transition = false;
									}
								}
							}
						}
					}
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_PawnState_Vertical_Bottom_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (((sCIPawn.up) && (operationCallback.isValidMove("up")))) {
				exitSequence_main_region_PawnState_Vertical_Bottom();
				sCIPawn.operationCallback.movePawn("up", 1);
				
				react_main_region_PawnState_Vertical__choice_0();
			} else {
				if (((sCIPawn.upLeft) && ((operationCallback.isValidJump("upleft") && !isStateActive(State.main_region_PawnState_Horizontal_Left))))) {
					exitSequence_main_region_PawnState_Vertical_Bottom();
					sCIPawn.operationCallback.movePawn("up", 1);
					
					react_main_region_PawnState_Vertical__choice_0();
				} else {
					if (((sCIPawn.upRight) && ((operationCallback.isValidJump("upright") && !isStateActive(State.main_region_PawnState_Horizontal_Right))))) {
						exitSequence_main_region_PawnState_Vertical_Bottom();
						sCIPawn.operationCallback.movePawn("up", 1);
						
						react_main_region_PawnState_Vertical__choice_0();
					} else {
						if (((sCIPawn.up) && (operationCallback.isValidJump("up")))) {
							exitSequence_main_region_PawnState_Vertical_Bottom();
							sCIPawn.operationCallback.movePawn("up", 2);
							
							react_main_region_PawnState_Vertical__choice_0();
						} else {
							did_transition = false;
						}
					}
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_PawnState_Vertical_Mid_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (((sCIPawn.upLeft) && ((operationCallback.isValidJump("upleft") && !isStateActive(State.main_region_PawnState_Horizontal_Left))))) {
				exitSequence_main_region_PawnState_Vertical_Mid();
				sCIPawn.operationCallback.movePawn("up", 1);
				
				react_main_region_PawnState_Vertical__choice_0();
			} else {
				if (((sCIPawn.up) && (operationCallback.isValidMove("up")))) {
					exitSequence_main_region_PawnState_Vertical_Mid();
					sCIPawn.operationCallback.movePawn("up", 1);
					
					react_main_region_PawnState_Vertical__choice_0();
				} else {
					if (((sCIPawn.upRight) && ((operationCallback.isValidJump("upright") && !isStateActive(State.main_region_PawnState_Horizontal_Right))))) {
						exitSequence_main_region_PawnState_Vertical_Mid();
						sCIPawn.operationCallback.movePawn("up", 1);
						
						react_main_region_PawnState_Vertical__choice_0();
					} else {
						if (((sCIPawn.up) && (operationCallback.isValidJump("up")))) {
							exitSequence_main_region_PawnState_Vertical_Mid();
							sCIPawn.operationCallback.movePawn("up", 2);
							
							react_main_region_PawnState_Vertical__choice_0();
						} else {
							if (((sCIPawn.down) && (operationCallback.isValidMove("down")))) {
								exitSequence_main_region_PawnState_Vertical_Mid();
								sCIPawn.operationCallback.movePawn("down", 1);
								
								react_main_region_PawnState_Vertical__choice_0();
							} else {
								if (((sCIPawn.downLeft) && ((operationCallback.isValidJump("downleft") && !isStateActive(State.main_region_PawnState_Horizontal_Left))))) {
									exitSequence_main_region_PawnState_Vertical_Mid();
									sCIPawn.operationCallback.movePawn("down", 1);
									
									react_main_region_PawnState_Vertical__choice_0();
								} else {
									if (((sCIPawn.downRight) && ((operationCallback.isValidJump("downright") && !isStateActive(State.main_region_PawnState_Horizontal_Right))))) {
										exitSequence_main_region_PawnState_Vertical_Mid();
										sCIPawn.operationCallback.movePawn("down", 1);
										
										react_main_region_PawnState_Vertical__choice_0();
									} else {
										if (((sCIPawn.down) && (operationCallback.isValidJump("down")))) {
											exitSequence_main_region_PawnState_Vertical_Mid();
											sCIPawn.operationCallback.movePawn("down", 2);
											
											react_main_region_PawnState_Vertical__choice_0();
										} else {
											did_transition = false;
										}
									}
								}
							}
						}
					}
				}
			}
		}
		return did_transition;
	}
	
	private boolean main_region_PawnState_Horizontal_Left_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (((sCIPawn.right) && (operationCallback.isValidMove("right")))) {
				exitSequence_main_region_PawnState_Horizontal_Left();
				sCIPawn.operationCallback.movePawn("right", 1);
				
				react_main_region_PawnState_Horizontal__choice_0();
			} else {
				if (((sCIPawn.downRight) && ((operationCallback.isValidJump("downright") && !isStateActive(State.main_region_PawnState_Vertical_Bottom))))) {
					exitSequence_main_region_PawnState_Horizontal_Left();
					sCIPawn.operationCallback.movePawn("right", 1);
					
					react_main_region_PawnState_Horizontal__choice_0();
				} else {
					if (((sCIPawn.upRight) && ((operationCallback.isValidJump("upright") && !isStateActive(State.main_region_PawnState_Vertical_Top))))) {
						exitSequence_main_region_PawnState_Horizontal_Left();
						sCIPawn.operationCallback.movePawn("right", 1);
						
						react_main_region_PawnState_Horizontal__choice_0();
					} else {
						if (((sCIPawn.right) && (operationCallback.isValidJump("right")))) {
							exitSequence_main_region_PawnState_Horizontal_Left();
							sCIPawn.operationCallback.movePawn("right", 2);
							
							react_main_region_PawnState_Horizontal__choice_0();
						} else {
							did_transition = false;
						}
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_PawnState_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_PawnState_Horizontal_Almost_Left_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (((sCIPawn.left) && (operationCallback.isValidMove("left")))) {
				exitSequence_main_region_PawnState_Horizontal_Almost_Left();
				sCIPawn.operationCallback.movePawn("left", 1);
				
				react_main_region_PawnState_Horizontal__choice_0();
			} else {
				if (((sCIPawn.upLeft) && ((operationCallback.isValidJump("upleft") && !isStateActive(State.main_region_PawnState_Vertical_Top))))) {
					exitSequence_main_region_PawnState_Horizontal_Almost_Left();
					sCIPawn.operationCallback.movePawn("left", 1);
					
					react_main_region_PawnState_Horizontal__choice_0();
				} else {
					if (((sCIPawn.downLeft) && ((operationCallback.isValidJump("downright") && !isStateActive(State.main_region_PawnState_Vertical_Bottom))))) {
						exitSequence_main_region_PawnState_Horizontal_Almost_Left();
						sCIPawn.operationCallback.movePawn("left", 1);
						
						react_main_region_PawnState_Horizontal__choice_0();
					} else {
						if (((sCIPawn.right) && (operationCallback.isValidMove("right")))) {
							exitSequence_main_region_PawnState_Horizontal_Almost_Left();
							sCIPawn.operationCallback.movePawn("right", 1);
							
							react_main_region_PawnState_Horizontal__choice_0();
						} else {
							if (((sCIPawn.upRight) && ((operationCallback.isValidJump("upright") && !isStateActive(State.main_region_PawnState_Vertical_Top))))) {
								exitSequence_main_region_PawnState_Horizontal_Almost_Left();
								sCIPawn.operationCallback.movePawn("right", 1);
								
								react_main_region_PawnState_Horizontal__choice_0();
							} else {
								if (((sCIPawn.downRight) && ((operationCallback.isValidJump("downright") && !isStateActive(State.main_region_PawnState_Vertical_Bottom))))) {
									exitSequence_main_region_PawnState_Horizontal_Almost_Left();
									sCIPawn.operationCallback.movePawn("right", 1);
									
									react_main_region_PawnState_Horizontal__choice_0();
								} else {
									if (((sCIPawn.right) && (operationCallback.isValidJump("right")))) {
										exitSequence_main_region_PawnState_Horizontal_Almost_Left();
										sCIPawn.operationCallback.movePawn("right", 2);
										
										react_main_region_PawnState_Horizontal__choice_0();
									} else {
										did_transition = false;
									}
								}
							}
						}
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_PawnState_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_PawnState_Horizontal_Almost_Right_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (((sCIPawn.left) && (operationCallback.isValidMove("left")))) {
				exitSequence_main_region_PawnState_Horizontal_Almost_Right();
				sCIPawn.operationCallback.movePawn("left", 1);
				
				react_main_region_PawnState_Horizontal__choice_0();
			} else {
				if (((sCIPawn.upLeft) && ((operationCallback.isValidJump("upleft") && !isStateActive(State.main_region_PawnState_Vertical_Top))))) {
					exitSequence_main_region_PawnState_Horizontal_Almost_Right();
					sCIPawn.operationCallback.movePawn("left", 1);
					
					react_main_region_PawnState_Horizontal__choice_0();
				} else {
					if (((sCIPawn.downLeft) && ((operationCallback.isValidJump("downleft") && !isStateActive(State.main_region_PawnState_Vertical_Bottom))))) {
						exitSequence_main_region_PawnState_Horizontal_Almost_Right();
						sCIPawn.operationCallback.movePawn("left", 1);
						
						react_main_region_PawnState_Horizontal__choice_0();
					} else {
						if (((sCIPawn.left) && (operationCallback.isValidJump("left")))) {
							exitSequence_main_region_PawnState_Horizontal_Almost_Right();
							sCIPawn.operationCallback.movePawn("left", 2);
							
							react_main_region_PawnState_Horizontal__choice_0();
						} else {
							if (((sCIPawn.right) && (operationCallback.isValidMove("right")))) {
								exitSequence_main_region_PawnState_Horizontal_Almost_Right();
								sCIPawn.operationCallback.movePawn("right", 1);
								
								react_main_region_PawnState_Horizontal__choice_0();
							} else {
								if (((sCIPawn.upRight) && ((operationCallback.isValidJump("upright") && !isStateActive(State.main_region_PawnState_Vertical_Top))))) {
									exitSequence_main_region_PawnState_Horizontal_Almost_Right();
									sCIPawn.operationCallback.movePawn("right", 1);
									
									react_main_region_PawnState_Horizontal__choice_0();
								} else {
									if (((sCIPawn.downRight) && ((operationCallback.isValidJump("downright") && !isStateActive(State.main_region_PawnState_Vertical_Bottom))))) {
										exitSequence_main_region_PawnState_Horizontal_Almost_Right();
										sCIPawn.operationCallback.movePawn("right", 1);
										
										react_main_region_PawnState_Horizontal__choice_0();
									} else {
										did_transition = false;
									}
								}
							}
						}
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_PawnState_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_PawnState_Horizontal_Right_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (((sCIPawn.left) && (operationCallback.isValidMove("left")))) {
				exitSequence_main_region_PawnState_Horizontal_Right();
				sCIPawn.operationCallback.movePawn("left", 1);
				
				react_main_region_PawnState_Horizontal__choice_0();
			} else {
				if (((sCIPawn.upLeft) && ((operationCallback.isValidJump("upleft") && !isStateActive(State.main_region_PawnState_Vertical_Top))))) {
					exitSequence_main_region_PawnState_Horizontal_Right();
					sCIPawn.operationCallback.movePawn("left", 1);
					
					react_main_region_PawnState_Horizontal__choice_0();
				} else {
					if (((sCIPawn.downLeft) && ((operationCallback.isValidJump("downleft") && !isStateActive(State.main_region_PawnState_Vertical_Bottom))))) {
						exitSequence_main_region_PawnState_Horizontal_Right();
						sCIPawn.operationCallback.movePawn("left", 1);
						
						react_main_region_PawnState_Horizontal__choice_0();
					} else {
						if (((sCIPawn.left) && (operationCallback.isValidJump("left")))) {
							exitSequence_main_region_PawnState_Horizontal_Right();
							sCIPawn.operationCallback.movePawn("left", 2);
							
							react_main_region_PawnState_Horizontal__choice_0();
						} else {
							did_transition = false;
						}
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_PawnState_react(try_transition);
		}
		return did_transition;
	}
	
	private boolean main_region_PawnState_Horizontal_Mid_react(boolean try_transition) {
		boolean did_transition = try_transition;
		
		if (try_transition) {
			if (((sCIPawn.upLeft) && ((operationCallback.isValidJump("upleft") && !isStateActive(State.main_region_PawnState_Vertical_Top))))) {
				exitSequence_main_region_PawnState_Horizontal_Mid();
				sCIPawn.operationCallback.movePawn("left", 1);
				
				react_main_region_PawnState_Horizontal__choice_0();
			} else {
				if (((sCIPawn.left) && (operationCallback.isValidMove("left")))) {
					exitSequence_main_region_PawnState_Horizontal_Mid();
					sCIPawn.operationCallback.movePawn("left", 1);
					
					react_main_region_PawnState_Horizontal__choice_0();
				} else {
					if (((sCIPawn.downLeft) && ((operationCallback.isValidJump("downleft") && !isStateActive(State.main_region_PawnState_Vertical_Bottom))))) {
						exitSequence_main_region_PawnState_Horizontal_Mid();
						sCIPawn.operationCallback.movePawn("left", 1);
						
						react_main_region_PawnState_Horizontal__choice_0();
					} else {
						if (((sCIPawn.left) && (operationCallback.isValidJump("left")))) {
							exitSequence_main_region_PawnState_Horizontal_Mid();
							sCIPawn.operationCallback.movePawn("left", 2);
							
							react_main_region_PawnState_Horizontal__choice_0();
						} else {
							if (((sCIPawn.right) && (operationCallback.isValidMove("right")))) {
								exitSequence_main_region_PawnState_Horizontal_Mid();
								sCIPawn.operationCallback.movePawn("right", 1);
								
								react_main_region_PawnState_Horizontal__choice_0();
							} else {
								if (((sCIPawn.upRight) && ((operationCallback.isValidJump("upright") && !isStateActive(State.main_region_PawnState_Vertical_Top))))) {
									exitSequence_main_region_PawnState_Horizontal_Mid();
									sCIPawn.operationCallback.movePawn("right", 1);
									
									react_main_region_PawnState_Horizontal__choice_0();
								} else {
									if (((sCIPawn.downRight) && ((operationCallback.isValidJump("downright") && !isStateActive(State.main_region_PawnState_Vertical_Bottom))))) {
										exitSequence_main_region_PawnState_Horizontal_Mid();
										sCIPawn.operationCallback.movePawn("right", 1);
										
										react_main_region_PawnState_Horizontal__choice_0();
									} else {
										if (((sCIPawn.right) && (operationCallback.isValidJump("right")))) {
											exitSequence_main_region_PawnState_Horizontal_Mid();
											sCIPawn.operationCallback.movePawn("right", 2);
											
											react_main_region_PawnState_Horizontal__choice_0();
										} else {
											did_transition = false;
										}
									}
								}
							}
						}
					}
				}
			}
		}
		if (did_transition==false) {
			did_transition = main_region_PawnState_react(try_transition);
		}
		return did_transition;
	}
	
}
